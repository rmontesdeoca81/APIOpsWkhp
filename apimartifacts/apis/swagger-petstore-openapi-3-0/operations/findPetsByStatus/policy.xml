<policies>
	<inbound>
		<base />
		<set-header name="x-request-received-time" exists-action="override">
			<value>{{TimeNow}}</value>
		</set-header>
		<log-to-eventhub logger-id="event-hub-logger">@{
         return new JObject(
             new JProperty("EventTime", DateTime.UtcNow.ToString()),
             new JProperty("ServiceName", context.Deployment.ServiceName),
             new JProperty("RequestId", context.RequestId),
             new JProperty("RequestIp", context.Request.IpAddress),
             new JProperty("OperationName", context.Operation.Name)
         ).ToString();
     }</log-to-eventhub>
		<set-header name="Accept-Encoding" exists-action="override">
			<value>deflate</value>
		</set-header>
		<set-query-parameter name="x-product-name" exists-action="override">
			<value>@(context.Product?.Name ?? "none")</value>
		</set-query-parameter>
		<set-header name="x-request-context-data" exists-action="override">
			<value>@(context.Deployment.Region)</value>
		</set-header>
		<set-header name="x-request-received-time" exists-action="override">
			<value>{{TimeNow}}</value>
		</set-header>
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
		<xml-to-json kind="direct" apply="always" consider-accept-header="false" />
		<set-header name="content-type" exists-action="delete" />
		<set-header name="date" exists-action="delete" />
		<choose>
			<when condition="@(context.Response.StatusCode == 200 && context.Product?.Name != "Unlimited" )">
				<set-body>@{
    var response = context.Response.Body.As<JArray>();

    var xmlResponse = new System.Text.StringBuilder();
    xmlResponse.Append("<root>");

    foreach (var item in response) {
        xmlResponse.Append("<item>");
        foreach (var property in item.Children<JProperty>()) {
            if (property.Name != "category") {
                xmlResponse.AppendFormat("<{0}>{1}</{0}>", property.Name, property.Value);
            }
        }
        xmlResponse.Append("</item>");
    }

    xmlResponse.Append("</root>");
    return xmlResponse.ToString();
}</set-body>
			</when>
		</choose>
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>